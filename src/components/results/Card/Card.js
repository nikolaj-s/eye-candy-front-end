
import React from 'react'

import {motion, useAnimation} from 'framer-motion'

import "./Card.css"
import VisibleHook from '../Hook/VisibleHook'
import { Tags } from './Tags/Tags'
import { WidthHeight } from './WidthHeight/WidthHeight'
import { useHistory } from 'react-router'



export const Card = (props) => {

    const cardAnim = useAnimation()

    const ref = React.useRef()

    const visible = VisibleHook(ref)

    const history = useHistory()

    if (visible === true) {
        cardAnim.start({
            opacity: 1,
            scale: 1,
            visibility: 'visible'
        })
    } 
    const tagsAnim = useAnimation()

    const onMouseOver = () => {
        tagsAnim.start({
            opacity: 0.9,
        })
    }

    const onMouseOut = () => {
        tagsAnim.start({
            opacity: 0
        })
    }

    const onClick = () => {
        const img = props.image;
        
        history.push(`/image/${img._id}` + window.location.search)
    }

    return (
        <motion.div onClick={props.loading ? null : onClick} onMouseEnter={onMouseOver} onMouseLeave={onMouseOut} animate={cardAnim} initial={{opacity: 0, scale: 0.5}} ref={ref} className="card-container">
          
            
                {
                    props.loading ?
                    <motion.div className="loading-place-holder"></motion.div>
                    : null
                }

                {
                    props.loading ?
                    null:

                    <div className="image-container">
                        <motion.img initial={{opacity: 0}} animate={{opacity: 1}} src={props.image.label_image} alt="wallpaper" />
                        <Tags animation={tagsAnim} tags={props.image.tags} />
                        <WidthHeight width={props.image.width} height={props.image.height} />

                        <div className="card-clicks-attribute">
                            <svg width="65" height="65" viewBox="0 0 65 65" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fillRule="evenodd" clipRule="evenodd" d="M22.5701 2.22235C22.2979 1.40487 21.7121 0.729005 20.9416 0.343438C20.171 -0.0421302 19.2789 -0.105816 18.4614 0.166391C17.6439 0.438598 16.968 1.0244 16.5824 1.79493C16.1969 2.56545 16.1332 3.45759 16.4054 4.27507L19.6534 14.019C19.9256 14.8365 20.5114 15.5123 21.282 15.8979C22.0525 16.2835 22.9447 16.3471 23.7622 16.0749C24.5797 15.8027 25.2555 15.2169 25.6411 14.4464C26.0267 13.6759 26.0904 12.7837 25.8182 11.9663L22.5701 2.22235V2.22235ZM44.5203 12.041C45.1119 11.4284 45.4393 10.6079 45.4319 9.75633C45.4245 8.90473 45.0829 8.0901 44.4807 7.4879C43.8785 6.8857 43.0639 6.54411 42.2122 6.53671C41.3606 6.52931 40.5402 6.85669 39.9276 7.44833L33.4315 13.9443C32.8399 14.5568 32.5125 15.3773 32.5199 16.2289C32.5273 17.0805 32.8689 17.8951 33.4711 18.4973C34.0733 19.0995 34.888 19.4411 35.7396 19.4485C36.5912 19.4559 37.4116 19.1285 38.0242 18.5369L44.5203 12.041ZM4.27728 16.4062C3.45978 16.1336 2.56746 16.1969 1.79662 16.5821C1.02577 16.9674 0.43955 17.6431 0.166908 18.4606C-0.105735 19.278 -0.0424614 20.1704 0.342809 20.9412C0.728078 21.712 1.40379 22.2982 2.22128 22.5709L11.9653 25.8188C12.7828 26.091 13.675 26.0274 14.4455 25.6418C15.2161 25.2562 15.8019 24.5804 16.0741 23.7629C16.3463 22.9454 16.2826 22.0533 15.897 21.2827C15.5115 20.5122 14.8356 19.9264 14.0181 19.6542L4.27403 16.4062H4.27728ZM27.0946 22.9346C26.5142 22.7236 25.8856 22.6825 25.2826 22.8161C24.6796 22.9496 24.1272 23.2524 23.6901 23.6887C23.253 24.1251 22.9494 24.677 22.8149 25.2798C22.6804 25.8826 22.7206 26.5113 22.9307 27.092L35.9228 62.8197C36.1476 63.4377 36.5549 63.973 37.0906 64.3546C37.6263 64.7362 38.2652 64.9461 38.9229 64.9567C39.5805 64.9673 40.2259 64.7779 40.7736 64.4137C41.3212 64.0495 41.7455 63.5276 41.9901 62.9171L46.6575 51.2537L59.4157 64.0084C59.7153 64.3186 60.0737 64.5661 60.47 64.7363C60.8663 64.9065 61.2925 64.9961 61.7238 64.9999C62.155 65.0036 62.5827 64.9214 62.9819 64.7581C63.3811 64.5948 63.7437 64.3536 64.0487 64.0487C64.3536 63.7437 64.5948 63.3811 64.7581 62.9819C64.9214 62.5828 65.0036 62.1551 64.9999 61.7238C64.9961 61.2925 64.9065 60.8663 64.7363 60.4701C64.5661 60.0738 64.3186 59.7154 64.0084 59.4158L51.2502 46.6578L62.9171 41.9937C63.5287 41.7497 64.0517 41.3255 64.4167 40.7774C64.7817 40.2294 64.9715 39.5833 64.961 38.9249C64.9504 38.2665 64.7399 37.6268 64.3575 37.0908C63.9751 36.5547 63.4388 36.1475 62.8196 35.9233L27.0914 22.9314L27.0946 22.9346ZM18.5361 38.0247C18.8463 37.7251 19.0938 37.3667 19.264 36.9704C19.4342 36.5742 19.5238 36.148 19.5276 35.7167C19.5313 35.2854 19.4491 34.8577 19.2858 34.4586C19.1225 34.0594 18.8813 33.6968 18.5764 33.3918C18.2714 33.0868 17.9087 32.8457 17.5096 32.6824C17.1104 32.5191 16.6827 32.4369 16.2514 32.4406C15.8202 32.4444 15.394 32.534 14.9977 32.7042C14.6014 32.8744 14.243 33.1219 13.9434 33.4321L7.44735 39.928C7.13713 40.2276 6.88969 40.586 6.71946 40.9823C6.54924 41.3785 6.45964 41.8047 6.45589 42.236C6.45214 42.6673 6.53432 43.095 6.69764 43.4941C6.86095 43.8933 7.10212 44.2559 7.40709 44.5609C7.71206 44.8658 8.0747 45.107 8.47387 45.2703C8.87304 45.4336 9.30074 45.5158 9.73201 45.5121C10.1633 45.5083 10.5895 45.4187 10.9858 45.2485C11.382 45.0783 11.7404 44.8308 12.0401 44.5206L18.5361 38.0247Z" fill="black"/>
                            </svg>
                            <p>{props.image.clicks}</p>
                        </div>
                    </div>
                }
            
        </motion.div>
    )
}
